<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://kevinguo.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kevinguo.me/" rel="alternate" type="text/html" /><updated>2017-07-13T14:42:01+08:00</updated><id>https://kevinguo.me/</id><title type="html">KevinGuo</title><subtitle>KevinGuo's blog</subtitle><author><name>KevinGuo</name></author><entry><title type="html">jekyll 搭建静态博客之https番外篇</title><link href="https://kevinguo.me/2017/07/13/jekyll-create-a-static-blog(3)/" rel="alternate" type="text/html" title="jekyll 搭建静态博客之https番外篇" /><published>2017-07-13T00:00:00+08:00</published><updated>2017-07-13T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/13/jekyll-create-a-static-blog(3)</id><content type="html" xml:base="https://kevinguo.me/2017/07/13/jekyll-create-a-static-blog(3)/"></content><author><name>KevinGuo</name></author><summary type="html"></summary></entry><entry><title type="html">jekyll 搭建静态博客(2)</title><link href="https://kevinguo.me/2017/07/12/jekyll-create-a-static-blog(2)/" rel="alternate" type="text/html" title="jekyll 搭建静态博客(2)" /><published>2017-07-12T00:00:00+08:00</published><updated>2017-07-12T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/12/jekyll-create-a-static-blog(2)</id><content type="html" xml:base="https://kevinguo.me/2017/07/12/jekyll-create-a-static-blog(2)/">&lt;blockquote&gt;
  &lt;p&gt;接上一篇，上一篇我们的博客已经可以自动化部署了，但是我们仍然不满足，还想要有一个好的评论系统和一个安全的https连接&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;disqus&quot;&gt;Disqus&lt;/h3&gt;

&lt;p&gt;disqus 是一家第三方社会化评论系统，主要为网站主提供评论托管服务&lt;/p&gt;

&lt;p&gt;1.在&lt;a href=&quot;https://disqus.com/&quot;&gt;disqus官网&lt;/a&gt;注册一个账号&lt;/p&gt;

&lt;p&gt;2.点击&lt;code class=&quot;highlighter-rouge&quot;&gt;Admin&lt;/code&gt;，然后新建站点，在&lt;code class=&quot;highlighter-rouge&quot;&gt;Website Name&lt;/code&gt;处输入你的站点名称，并且根据你的情况选择站点种类&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/disqus-create.png&quot; alt=&quot;disqus-create&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3.在&lt;code class=&quot;highlighter-rouge&quot;&gt;Website URL&lt;/code&gt;处输入你的站点 url，保存即可&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/disqus-conf.png&quot; alt=&quot;disqus-conf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4.修改你的&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;文件中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;comments_provider&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要： 这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;，实际上是 disqus 中的shortname&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;comments_provider: disqus
disqus:
    username: kevinguo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5.修改完成后，push 到镜像站点，触发 Travis CI 重新发布博客，最终成功加载 disqus&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/disqus-done.png&quot; alt=&quot;disqus-done&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果无法加载 disqus ，可能是因为被墙了，FQ 出去试试&lt;/p&gt;

&lt;h3 id=&quot;cloudflare&quot;&gt;Cloudflare&lt;/h3&gt;

&lt;p&gt;cloudflare 主要是为客户提供网站安全管理，性能优化等，比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;CDN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;1.在&lt;a href=&quot;https://sg.godaddy.com/zh/&quot;&gt;godaddy&lt;/a&gt;上去申请一个域名吧，一年也就 5$&lt;/p&gt;

&lt;p&gt;2.在&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;cloudflare官网&lt;/a&gt;注册一个账号&lt;/p&gt;

&lt;p&gt;3.点击 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Site&lt;/code&gt;，添加一个站点，然后 &lt;code class=&quot;highlighter-rouge&quot;&gt;Begin Scan&lt;/code&gt;,大概需要60s&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cloudflare-add.png&quot; alt=&quot;cloudflare-add&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4.扫描完成后，会看到 DNS 记录，自行添加(其中彩色的云朵表示开启SSL，否则就只是DNS)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意 如果你的A记录启用的SSL，那么所有关于这个A记录的请求都会转发给 Cloudflare，然后通过 Cloudflare再转发到你的服务器，所以这个时候，你通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;nslookup kevinguo.me&lt;/code&gt; 的时候解析出来的地址，并不是你的服务器地址，而是 Cloudflare的地址;如果你有其他服务(诸如VPS,FTP等)使用的是这个地址的话，最好是再添加一条不走SSL的A记录&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cloudflare-dns.png&quot; alt=&quot;cloudflare-dns&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5.完成上面的步骤后，到你的域名控制面板修改DNS服务&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/godaddy-dns.png&quot; alt=&quot;godaddy-dns&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6.修改完成后，在 Cloudflare点击继续，大概5~30分钟后 &lt;code class=&quot;highlighter-rouge&quot;&gt;Overview&lt;/code&gt; 状态会变成 &lt;code class=&quot;highlighter-rouge&quot;&gt;Status: Active&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cloudflare-status.png&quot; alt=&quot;cloudflare-status&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7.点击 &lt;code class=&quot;highlighter-rouge&quot;&gt;Crypto&lt;/code&gt;来设置SSL 级别&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cloudflare-ssl.png&quot; alt=&quot;cloudflare-ssl&quot; /&gt;&lt;/p&gt;

&lt;p&gt;8.点击 &lt;code class=&quot;highlighter-rouge&quot;&gt;Page Rules&lt;/code&gt;来设置域名重定向&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将顶级域名都重定向到 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://www.kevinguo.me&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cloudflare-forwarding.png&quot; alt=&quot;cloudflare-forwarding&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;添加自动使用 HTTPS，所有访问&lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.kevinguo.me&lt;/code&gt;的请求都使用HTTPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cloudflare-always-https.png&quot; alt=&quot;cloudflare-always-https&quot; /&gt;&lt;/p&gt;

&lt;p&gt;9.最后，访问你的blog试试呢&lt;/p&gt;</content><author><name>KevinGuo</name></author><summary type="html">接上一篇，上一篇我们的博客已经可以自动化部署了，但是我们仍然不满足，还想要有一个好的评论系统和一个安全的https连接</summary></entry><entry><title type="html">jekyll 搭建静态博客(1)</title><link href="https://kevinguo.me/2017/07/12/jekyll-create-a-static-blog(1)/" rel="alternate" type="text/html" title="jekyll 搭建静态博客(1)" /><published>2017-07-12T00:00:00+08:00</published><updated>2017-07-12T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/12/jekyll-create-a-static-blog(1)</id><content type="html" xml:base="https://kevinguo.me/2017/07/12/jekyll-create-a-static-blog(1)/">&lt;blockquote&gt;
  &lt;p&gt;这段时间将原来在hexo上的博客迁到了jekyll上；采用Jekyll生成静态站点，Travis CI自动化部署，记录下来，以免以后忘记了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;整体思路&quot;&gt;整体思路&lt;/h3&gt;

&lt;p&gt;我们都知道通过jekyll搭建博客最终都是将通过&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;生成的&lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;下的静态文件发布出去，那么我们是不是可以直接采用 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;静态文件&lt;/code&gt;的方式来发布呢，当然是可以的&lt;/p&gt;

&lt;h4 id=&quot;准备两个站点仓库&quot;&gt;准备两个站点仓库&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;主站点Github (保存静态文件)&lt;/li&gt;
  &lt;li&gt;镜像站点Github (触发 travis ，生成静态文件)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们只需要将 Travis CI生成的静态文件推送到 主站点Github，博客通过 docker 化部署，采用 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;静态文件&lt;/code&gt; 方式；每次容器启动后都要从主站点Github pull 最新的静态文件，流程如下&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;本地提交博客 Markdown 文件到镜像站点Github&lt;/li&gt;
  &lt;li&gt;Github 触发 Travis CI 执行jekyll 编译&lt;/li&gt;
  &lt;li&gt;Travis CI 将编译后的静态文件push到主站点Github&lt;/li&gt;
  &lt;li&gt;Travis CI 通知服务器重启容器&lt;/li&gt;
  &lt;li&gt;容器重启拉去最新静态文件完成更新&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt; 是啥？ 就是个类似jenkins的东西. &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; 是啥？ 就是个类似Travis的东西.&lt;/p&gt;

&lt;h4 id=&quot;构建所需docker镜像&quot;&gt;构建所需docker镜像&lt;/h4&gt;

&lt;p&gt;既然博客是通过 docker 化部署，采用&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;静态文件&lt;/code&gt; 的方式发布，那么我们第一步就是要构建我们博客所需的镜像，&lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; 内容如下&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM nginx:1.11.10-alpine

MAINTAINER KevinGuo &lt;span class=&quot;s2&quot;&gt;&quot;chinakevinguo@live.com&quot;&lt;/span&gt;

ENV TZ &lt;span class=&quot;s1&quot;&gt;'Asia/Shanghai'&lt;/span&gt;

RUN apk upgrade --no-cache &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add --no-cache bash git &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /usr/share/nginx/html &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git clone https://github.com/chinakevinguo/kevinguo.me.git /usr/share/nginx/html &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia/Shanghai&quot;&lt;/span&gt; &amp;gt; /etc/timezone &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/cache/apk/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

ADD entrypoint.sh /entrypoint.sh

WORKDIR /usr/share/nginx/html

CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/entrypoint.sh&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;容器每次重启的时候都会去主站点Github上拉取最新的静态文件，并且启动 nginx，&lt;code class=&quot;highlighter-rouge&quot;&gt;entrypoint.sh&lt;/code&gt;内容如下&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

git pull
nginx -g &lt;span class=&quot;s2&quot;&gt;&quot;daemon off;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后执行&lt;code class=&quot;highlighter-rouge&quot;&gt;docker build&lt;/code&gt;，生成我们所需的镜像&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t chinakevinguo_jekyll_kevinguo_me .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;博客所需镜像制作完成后，启动容器&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --name chinakevinguo_jekyll_kevinguo_me --restart&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always -p 80:80 -p 443:443 chinakevinguo_jekyll_kevinguo_me
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;下一步就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;静态文件&lt;/code&gt; 了&lt;/p&gt;

&lt;h4 id=&quot;静态文件的自动更新&quot;&gt;静态文件的自动更新&lt;/h4&gt;

&lt;p&gt;通过上面 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; 文件中的内容，你会发现，我是将 &lt;code class=&quot;highlighter-rouge&quot;&gt;kevinguo.me.git&lt;/code&gt;下的内容clone到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/nginx/html&lt;/code&gt;，也就是说，我实际上是发布的 &lt;code class=&quot;highlighter-rouge&quot;&gt;kevinguo.me.git&lt;/code&gt; 下的静态文件，那么 &lt;code class=&quot;highlighter-rouge&quot;&gt;kevinguo.me.git&lt;/code&gt; 下面的内容又是怎么来的呢&lt;/p&gt;

&lt;p&gt;实际上这些文件是 Travis CI 基于镜像站点(chinakevinguo.github.io) 完成 build 后在 &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;目录下生成的镜像文件&lt;/p&gt;

&lt;h5 id=&quot;travis-配置&quot;&gt;Travis 配置&lt;/h5&gt;

&lt;p&gt;1.使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;Github&lt;/code&gt; 账号登录 Travis，右上方按钮点击同步项目，下方打开需要继承的项目，最后点击齿轮进入项目配置页面&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis.png&quot; alt=&quot;travis&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2.打开 &lt;code class=&quot;highlighter-rouge&quot;&gt;Build only if .travis.yml is present&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis-yml.png&quot; alt=&quot;travis-yml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3.Travis CI push静态文件到Github 通过 Github的token实现授权配置，准备 Github上的token&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意： 这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;，复制之后，最好自己保存好哟，因为只显示一次，如果丢失只能再次生成了&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github-token.png&quot; alt=&quot;github-token.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4.配置Travis CI 部署所需环境变量，&lt;code class=&quot;highlighter-rouge&quot;&gt;$JEKYLL_GITHUB_TOKEN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis-token.png&quot; alt=&quot;travis-token&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5.Travis CI 和服务器之间通过密钥认证，并且对密钥进行了加密，所以我们需要在服务器上进行一些加密操作，并将密钥传到Travis上&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# clone 镜像站点&lt;/span&gt;
git clone git@github.com:chinakevinguo/chinakevinguo.github.io.git

&lt;span class=&quot;c&quot;&gt;# 在镜像站点(chinakevinguo.github.io)下，新建`.travis.yml`文件&lt;/span&gt;
touch .travis.yml

&lt;span class=&quot;c&quot;&gt;# 生成公钥和私钥&lt;/span&gt;
ssh-keygen

&lt;span class=&quot;c&quot;&gt;# 安装travis命令行工具，如无法使用gem指令需先安装ruby&lt;/span&gt;
gem install travis

&lt;span class=&quot;c&quot;&gt;# --auto自动登录github账户&lt;/span&gt;
travis login --auto

&lt;span class=&quot;c&quot;&gt;# 在.travis.yml同级目录下执行，此处的--add参数表示自动添加脚本到.travis.yml文件中&lt;/span&gt;
travis encrypt-file ~/.ssh/id_rsa --add
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;执行完成后会发现&lt;code class=&quot;highlighter-rouge&quot;&gt;travis&lt;/code&gt;网站项目里的环境变量多了两个参数&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis-key.png&quot; alt=&quot;travis-key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;并且在&lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;before_install&lt;/code&gt;周期中多了下面2行&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- openssl aes-256-cbc -K &lt;span class=&quot;nv&quot;&gt;$encrypted_3870315c7a22_key&lt;/span&gt; -iv &lt;span class=&quot;nv&quot;&gt;$encrypted_3870315c7a22_iv&lt;/span&gt;
  -in id_rsa.enc -out ~&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;.ssh/id_rsa -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;默认生成的命令会在&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;前面带转义符&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;，我们不需要，手动删除即可&lt;/p&gt;

&lt;p&gt;6.进一步修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; 文件，内容如下&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;language: ruby
rvm:
- 2.3.3
before_install:
- openssl aes-256-cbc -K &lt;span class=&quot;nv&quot;&gt;$encrypted_3870315c7a22_key&lt;/span&gt; -iv &lt;span class=&quot;nv&quot;&gt;$encrypted_3870315c7a22_iv&lt;/span&gt; -in id_rsa.enc -out ~/.ssh/id_rsa -d
- chmod 600 ~/.ssh/id_rsa
install:
  - gem install jekyll
  - gem install html-proofer
script:
- bundle install
- bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build
after_success:
- git clone https://github.com/chinakevinguo/kevinguo.me.git
- &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;kevinguo.me &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp -r ../_site/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; .
- git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;chinakevinguo&quot;&lt;/span&gt;
- git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;chinakevinguo@live.com&quot;&lt;/span&gt;
- git add --all .
- git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;Travis CI Auto Builder&quot;&lt;/span&gt;
- git push --force https://&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;@github.com/chinakevinguo/kevinguo.me.git master
- ssh root@host.kevinguo.me &lt;span class=&quot;s2&quot;&gt;&quot;docker restart chinakevinguo_jekyll_kevinguo_me&quot;&lt;/span&gt;
branches:
  only:
  - master
env:
  global:
  - &lt;span class=&quot;nv&quot;&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;addons:
  ssh_known_hosts: host.kevinguo.me
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;7.修改镜像站点下的其他内容，比如&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;，将一些内容替换成你自己的,下一篇，我将会介绍 &lt;code class=&quot;highlighter-rouge&quot;&gt;disqus&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;cloudflare&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;8.所有内容都修改好后，&lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;到 Github上，会发现触发了 Travis CI，并且将生成的静态文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt; 到了主站点仓库 &lt;code class=&quot;highlighter-rouge&quot;&gt;kevinguo.me&lt;/code&gt;，然后重启了容器&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis-done.png&quot; alt=&quot;travis-done&quot; /&gt;&lt;/p&gt;

&lt;p&gt;博客发布成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/jekyll-blog-done.png&quot; alt=&quot;jekyll-blog-done&quot; /&gt;&lt;/p&gt;</content><author><name>KevinGuo</name></author><summary type="html">这段时间将原来在hexo上的博客迁到了jekyll上；采用Jekyll生成静态站点，Travis CI自动化部署，记录下来，以免以后忘记了</summary></entry><entry><title type="html">video</title><link href="https://kevinguo.me/2017/07/06/video-test/" rel="alternate" type="text/html" title="video" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/video-test</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/video-test/">&lt;blockquote&gt;
  &lt;p&gt;就是加个视频链接，测试一下看看行不行，代码如下&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;video&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;video&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;controls=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preload=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;498&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;510&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;poster=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://media.w3.org/2010/05/sintel/poster.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mp4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://media.w3.org/2010/05/sintel/trailer.mp4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;video/mp4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;webm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://media.w3.org/2010/05/sintel/trailer.webm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;video/webm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ogv&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://media.w3.org/2010/05/sintel/trailer.ogv&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;video/ogg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h6 id=&quot;效果如下&quot;&gt;效果如下&lt;/h6&gt;
&lt;video id=&quot;video&quot; controls=&quot;&quot; preload=&quot;none&quot;&gt;
      &lt;source id=&quot;mp4&quot; src=&quot;http://media.w3.org/2010/05/sintel/trailer.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source id=&quot;webm&quot; src=&quot;http://media.w3.org/2010/05/sintel/trailer.webm&quot; type=&quot;video/webm&quot; /&gt;
      &lt;source id=&quot;ogv&quot; src=&quot;http://media.w3.org/2010/05/sintel/trailer.ogv&quot; type=&quot;video/ogg&quot; /&gt;
    &lt;/video&gt;</content><author><name>KevinGuo</name></author><summary type="html">就是加个视频链接，测试一下看看行不行，代码如下</summary></entry><entry><title type="html">saltstack之pillar</title><link href="https://kevinguo.me/2017/07/06/saltstack%E4%B9%8Bpillar/" rel="alternate" type="text/html" title="saltstack之pillar" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/saltstack%E4%B9%8Bpillar</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/saltstack%E4%B9%8Bpillar/">&lt;h1 id=&quot;pillar&quot;&gt;&lt;strong&gt;Pillar&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;主要作用是存储和定义配置管理中需要的一些变量，比如数据，比如软件版本，用户名密码等信息&lt;/p&gt;

&lt;!--more--&gt;
&lt;h6 id=&quot;1在master上开启pillar_roots&quot;&gt;1.在master上开启pillar_roots&lt;/h6&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;pillar_roots&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/srv/pillar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!--more--&gt;
&lt;h6 id=&quot;2在master的srvpillar目录下新建topslspackagesslsservicessls&quot;&gt;2.在master的/srv/pillar目录下新建&lt;em&gt;top.sls&lt;/em&gt;，&lt;em&gt;packages.sls&lt;/em&gt;，&lt;em&gt;services.sls&lt;/em&gt;&lt;/h6&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;root@saltstack-node1 pillar&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# cat top.sls&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;packages&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;root@saltstack-node1 pillar&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# cat packages.sls&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;zabbix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;package-name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;zabbix&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.2.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;root@saltstack-node1 pillar&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# cat services.sls&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;zabbix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10050&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;admin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;3执行pillaritem-zabbix查看指定的信息&quot;&gt;3.执行pillar.item zabbix查看指定的信息&lt;/h6&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;root@saltstack-node1 pillar&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# salt 'saltstack-node2*' pillar.item zabbix&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;saltstack-node2.example.com&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;----------&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;zabbix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;----------&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;package-name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;zabbix&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;10050&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;admin&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;2.2.4&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>KevinGuo</name></author><summary type="html">Pillar 主要作用是存储和定义配置管理中需要的一些变量，比如数据，比如软件版本，用户名密码等信息</summary></entry><entry><title type="html">kargo容器化部署kubernetes高可用集群(3)</title><link href="https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(3)/" rel="alternate" type="text/html" title="kargo容器化部署kubernetes高可用集群(3)" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(3)</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(3)/">&lt;blockquote&gt;
  &lt;p&gt;上一篇我们详细的剥析了通过kargo生成的各类服务的配置文件，学会了，如何生成证书，如何配置etcd,calico,kubelet，学会了如何配置一个kubernetes的高可用集群。既然集群已经配好了，那么这一章，我们就来学学如何配置一些常用的插件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;p&gt;其实这一章好像没什么好讲的，无非就是几个yaml文件，只要你集群搭建成功了，直接去&lt;a href=&quot;https://github.com/chinakevinguo/kubernetes-custom/tree/master/kubernetes%20%E6%8F%92%E4%BB%B6&quot;&gt;这里&lt;/a&gt;下载yml文件运行即可&lt;/p&gt;

&lt;p&gt;目前，我所用到的插件如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ingress&lt;/li&gt;
  &lt;li&gt;kubedns&lt;/li&gt;
  &lt;li&gt;dashboard&lt;/li&gt;
  &lt;li&gt;efk&lt;/li&gt;
  &lt;li&gt;heapster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;运行结果如下&lt;/p&gt;

&lt;p&gt;Dashboard and heapster
&lt;img src=&quot;/images/posts/dashboard-heapster.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;EFK
&lt;img src=&quot;/images/posts/kibana.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后期再研究新的东西了再加吧，头疼，下班了&lt;/p&gt;</content><author><name>KevinGuo</name></author><summary type="html">上一篇我们详细的剥析了通过kargo生成的各类服务的配置文件，学会了，如何生成证书，如何配置etcd,calico,kubelet，学会了如何配置一个kubernetes的高可用集群。既然集群已经配好了，那么这一章，我们就来学学如何配置一些常用的插件。</summary></entry><entry><title type="html">kargo容器化部署kubernetes高可用集群(2)</title><link href="https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(2)/" rel="alternate" type="text/html" title="kargo容器化部署kubernetes高可用集群(2)" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(2)</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(2)/">&lt;blockquote&gt;
  &lt;p&gt;上一篇已经使用kargo搭建了kubernetes高可用集群，这里重点通过剥析kargo生成的配置文件来更加细化的了解下kubernetes，方便后期对kubernetes的自定义。所有的配置文件，我会放到&lt;a href=&quot;https://github.com/chinakevinguo/kubernetes-custom/tree/master/kubernetes%20%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E7%BB%84%E4%BB%B6&quot;&gt;github&lt;/a&gt;上&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;h1 id=&quot;etcd-service&quot;&gt;etcd service&lt;/h1&gt;

&lt;p&gt;kargo中也将etcd以容器的方式运行，不过不是放在manifest中，而是单独用systemd的方式管理起来，然后通过etcd cluster来实现高可用&lt;/p&gt;

&lt;h2 id=&quot;主要文件&quot;&gt;主要文件&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/etcd &lt;span class=&quot;c&quot;&gt;# etcd server启动的shell脚本文件&lt;/span&gt;
/usr/local/etcdctl &lt;span class=&quot;c&quot;&gt;# etcd 命令,使用命令docker cp etcd1:/usr/local/bin/etcdctl /usr/local/bin/etcdctl将命令复制到本地&lt;/span&gt;
/etc/systemd/system/etcd.service &lt;span class=&quot;c&quot;&gt;# etcd 的service文件&lt;/span&gt;
/etc/etcd.env &lt;span class=&quot;c&quot;&gt;# etcd 的环境文件&lt;/span&gt;
/etc/ssl/etcd/ &lt;span class=&quot;c&quot;&gt;# etcd 证书文件存放目录&lt;/span&gt;
/etc/ssl/etcd/openssl.conf &lt;span class=&quot;c&quot;&gt;# 生成etcd证书所需要的openssl文件&lt;/span&gt;
/usr/local/bin/etcd-scripts/ &lt;span class=&quot;c&quot;&gt;# 生成etcd证书的脚本文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;etcd-shell脚本&quot;&gt;etcd shell脚本&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /usr/local/etcd
&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
/usr/bin/docker run &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --restart&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on-failure:5 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --env-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/etcd.env &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --net&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/ssl/certs:/etc/ssl/certs:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/ssl/etcd/ssl:/etc/ssl/etcd/ssl:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/lib/etcd:/var/lib/etcd:rw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --memory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512M &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;etcd1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  quay.io/coreos/etcd:v3.1.5 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    /usr/local/bin/etcd &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;etcdservice&quot;&gt;etcd.service&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /etc/systemd/system/etcd.service
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;etcd docker wrapper
&lt;span class=&quot;nv&quot;&gt;Wants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker.socket
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker.service

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
&lt;span class=&quot;nv&quot;&gt;PermissionsStartOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EnvironmentFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/etcd.env
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin/etcd
&lt;span class=&quot;nv&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-/usr/bin/docker rm -f etcd1
&lt;span class=&quot;nv&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/docker stop etcd1
&lt;span class=&quot;nv&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always
&lt;span class=&quot;nv&quot;&gt;RestartSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15s
&lt;span class=&quot;nv&quot;&gt;TimeoutStartSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30s

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;etcdenv&quot;&gt;etcd.env&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /etc/etcd.env
&lt;span class=&quot;nv&quot;&gt;ETCD_DATA_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/lib/etcd
&lt;span class=&quot;nv&quot;&gt;ETCD_ADVERTISE_CLIENT_URLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.90:2379
&lt;span class=&quot;nv&quot;&gt;ETCD_INITIAL_ADVERTISE_PEER_URLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.90:2380
&lt;span class=&quot;nv&quot;&gt;ETCD_INITIAL_CLUSTER_STATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;existing
&lt;span class=&quot;nv&quot;&gt;ETCD_LISTEN_CLIENT_URLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.90:2379,https://127.0.0.1:2379
&lt;span class=&quot;nv&quot;&gt;ETCD_ELECTION_TIMEOUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5000
&lt;span class=&quot;nv&quot;&gt;ETCD_HEARTBEAT_INTERVAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;250
&lt;span class=&quot;nv&quot;&gt;ETCD_INITIAL_CLUSTER_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;k8s_etcd
&lt;span class=&quot;nv&quot;&gt;ETCD_LISTEN_PEER_URLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.90:2380
&lt;span class=&quot;nv&quot;&gt;ETCD_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;etcd1
&lt;span class=&quot;nv&quot;&gt;ETCD_PROXY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;off
&lt;span class=&quot;nv&quot;&gt;ETCD_INITIAL_CLUSTER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;etcd1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.90:2380,etcd2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.91:2380,etcd3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.92:2380

&lt;span class=&quot;c&quot;&gt;# TLS settings&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ETCD_TRUSTED_CA_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/ssl/etcd/ssl/ca.pem
&lt;span class=&quot;nv&quot;&gt;ETCD_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/ssl/etcd/ssl/member-node1.pem
&lt;span class=&quot;nv&quot;&gt;ETCD_KEY_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/ssl/etcd/ssl/member-node1-key.pem
&lt;span class=&quot;nv&quot;&gt;ETCD_PEER_TRUSTED_CA_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/ssl/etcd/ssl/ca.pem
&lt;span class=&quot;nv&quot;&gt;ETCD_PEER_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/ssl/etcd/ssl/member-node1.pem
&lt;span class=&quot;nv&quot;&gt;ETCD_PEER_KEY_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/ssl/etcd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;安装步骤&quot;&gt;安装步骤&lt;/h2&gt;
&lt;p&gt;安装步骤很简单&lt;/p&gt;

&lt;p&gt;1.按照最后的步骤生成证书
2.在每个etcd server的节点上配置好上面的配置文件
3.将etcd.service配置成系统服务(其实就是将运行docker的shell脚本写到systemd中)&lt;/p&gt;
&lt;h1 id=&quot;calico-service&quot;&gt;calico service&lt;/h1&gt;

&lt;h2 id=&quot;主要文件-1&quot;&gt;主要文件&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/calicoctl &lt;span class=&quot;c&quot;&gt;#calicoctl命令&lt;/span&gt;
/etc/systemd/system/calico-node.service &lt;span class=&quot;c&quot;&gt;#calico-node service文件&lt;/span&gt;
/etc/calico/calico.env &lt;span class=&quot;c&quot;&gt;# calico 环境文件&lt;/span&gt;
/etc/calico/certs/  &lt;span class=&quot;c&quot;&gt;#(将etcd/ssl目录下的ca.pem 复制成cert.crt, node-nodex.pem复制成cert.crt, node-nodex-key.pem复制成key.pem)&lt;/span&gt;
/etc/cni/net.d/10-calico.conf &lt;span class=&quot;c&quot;&gt;# calico cni config&lt;/span&gt;
/etc/kubernetes/node-kubeconfig.yaml &lt;span class=&quot;c&quot;&gt;# 为kubernetes 配置calico网络&lt;/span&gt;
/opt/cni/bin/ &lt;span class=&quot;c&quot;&gt;#(将hyperkube和calico/cni镜像中/opt/cni/bin/目录下的所有插件复制到宿主机的/opt/cni/bin/目录下，可通过-v挂载的方式)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;calicoctl-shell脚本&quot;&gt;calicoctl shell脚本&lt;/h3&gt;
&lt;p&gt;运行这个脚本其实就是运行一个容器来进行查询&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
/usr/bin/docker run -i --privileged --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
--net&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host --pid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-e &lt;span class=&quot;nv&quot;&gt;ETCD_ENDPOINTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://172.30.33.90:2379,https://172.30.33.91:2379,https://172.30.33.92:2379 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-e &lt;span class=&quot;nv&quot;&gt;ETCD_CA_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/calico/certs/ca_cert.crt &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-e &lt;span class=&quot;nv&quot;&gt;ETCD_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/calico/certs/cert.crt &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-e &lt;span class=&quot;nv&quot;&gt;ETCD_KEY_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/calico/certs/key.pem &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-v /usr/bin/docker:/usr/bin/docker &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-v /var/run/docker.sock:/var/run/docker.sock &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-v /var/run/calico:/var/run/calico &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-v /etc/calico/certs:/etc/calico/certs:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
--memory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;170M --cpu-shares&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
calico/ctl:v1.1.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;calico-nodeservice&quot;&gt;calico-node.service&lt;/h3&gt;
&lt;p&gt;这个系统服务，其实就是启动一个容器&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;calico-node
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker.service
&lt;span class=&quot;nv&quot;&gt;Requires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker.service

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;EnvironmentFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/calico/calico.env
&lt;span class=&quot;nv&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-/usr/bin/docker rm -f calico-node
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/docker run --net&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host --privileged &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;calico-node &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;HOSTNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_HOSTNAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_IP&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;IP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_IP6&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;CALICO_NETWORKING_BACKEND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_NETWORKING_BACKEND&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;FELIX_DEFAULTENDPOINTTOHOSTACTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RETURN &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;AS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_AS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;NO_DEFAULT_POOLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_NO_DEFAULT_POOLS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;CALICO_LIBNETWORK_ENABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CALICO_LIBNETWORK_ENABLED&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;ETCD_ENDPOINTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCD_ENDPOINTS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;ETCD_CA_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCD_CA_CERT_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;ETCD_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCD_CERT_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -e &lt;span class=&quot;nv&quot;&gt;ETCD_KEY_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCD_KEY_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -v /var/log/calico:/var/log/calico &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -v /run/docker/plugins:/run/docker/plugins &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -v /lib/modules:/lib/modules &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -v /var/run/calico:/var/run/calico &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -v /etc/calico/certs:/etc/calico/certs:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 --memory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;500M --cpu-shares&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 calico/node:v1.1.0

&lt;span class=&quot;nv&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always
&lt;span class=&quot;nv&quot;&gt;RestartSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10s

&lt;span class=&quot;nv&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-/usr/bin/docker stop calico-node

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;calicoenv-文件&quot;&gt;calico.env 文件&lt;/h3&gt;
&lt;p&gt;系统服务所需的环境变量信息&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;ETCD_ENDPOINTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://172.30.33.90:2379,https://172.30.33.91:2379,https://172.30.33.92:2379&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ETCD_CA_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/calico/certs/ca_cert.crt&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ETCD_CERT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/calico/certs/cert.crt&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ETCD_KEY_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/calico/certs/key.pem&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CALICO_IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;172.30.33.90&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CALICO_IP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CALICO_NO_DEFAULT_POOLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CALICO_LIBNETWORK_ENABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CALICO_HOSTNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;k8s-master01&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;10-calicoconf&quot;&gt;10-calico.conf&lt;/h3&gt;
&lt;p&gt;Calico CNI插件需要有一个标准的CNI配置文件&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;calico-k8s-network&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;hostname&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;k8s-master01&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;calico&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;etcd_endpoints&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;https://172.30.33.90:2379,https://172.30.33.91:2379,https://172.30.33.92:2379&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;etcd_cert_file&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/etc/ssl/etcd/ssl/node-node1.pem&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;etcd_key_file&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/etc/ssl/etcd/ssl/node-node1-key.pem&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;etcd_ca_cert_file&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/etc/ssl/etcd/ssl/ca.pem&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;log_level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;ipam&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;calico-ipam&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;kubernetes&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;kubeconfig&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/etc/kubernetes/node-kubeconfig.yaml&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;安装步骤-1&quot;&gt;安装步骤&lt;/h2&gt;

&lt;p&gt;安装步骤也很简单&lt;/p&gt;

&lt;p&gt;1.首先将hyperkube和calico/cni镜像中的CNI插件拷贝到宿主机本地的/opt/cni/bin/目录下
2.将和etcd通信的证书配置好
3.将calicoctl,calico.env,10-calico.conf文件配置好放到指定的目录
4.将calico-node配置成systemd管理的系统服务
5.配置kubelet和kube-proxy&lt;/p&gt;
&lt;h1 id=&quot;kubelet-service&quot;&gt;kubelet service&lt;/h1&gt;

&lt;h2 id=&quot;主要文件-2&quot;&gt;主要文件&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/kubelet &lt;span class=&quot;c&quot;&gt;# 启动kubelet的shell脚本文件&lt;/span&gt;
/usr/local/bin/kubectl &lt;span class=&quot;c&quot;&gt;# kubectl二进制文件&lt;/span&gt;
/etc/systemd/system/kubelet.service &lt;span class=&quot;c&quot;&gt;# kubelet 的service文件&lt;/span&gt;
/etc/kubernetes/kubelet.env &lt;span class=&quot;c&quot;&gt;# kubelet service相关的环境文件&lt;/span&gt;
/etc/kubernetes/ssl &lt;span class=&quot;c&quot;&gt;# kubernetes证书文件存放目录&lt;/span&gt;
/etc/kubernetes/openssl.conf &lt;span class=&quot;c&quot;&gt;# 生成kubernetes证书所依赖的openssl文件&lt;/span&gt;
/usr/local/bin/kubernetes-scripts/ &lt;span class=&quot;c&quot;&gt;# 生成证书文件的shell脚本&lt;/span&gt;
/etc/kubernetes/node-kubeconfig.yaml &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;kubelet-shell-脚本&quot;&gt;kubelet shell 脚本&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /usr/local/bin/kubelet
&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
/usr/bin/docker run &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --net&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --pid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --privileged &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kubelet &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --restart&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on-failure:5 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --memory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512M &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --cpu-shares&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /dev:/dev:rw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/cni:/etc/cni:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /opt/cni:/opt/cni:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/ssl:/etc/ssl:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/resolv.conf:/etc/resolv.conf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/pki/tls:/etc/pki/tls:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/pki/ca-trust:/etc/pki/ca-trust:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /sys:/sys:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/lib/docker:/var/lib/docker:rw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/log:/var/log:rw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/lib/kubelet:/var/lib/kubelet:shared &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/lib/cni:/var/lib/cni:shared &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /var/run:/var/run:rw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -v /etc/kubernetes:/etc/kubernetes:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  quay.io/coreos/hyperkube:v1.6.1_coreos.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  ./hyperkube kubelet &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;kubeletservice-文件&quot;&gt;kubelet.service 文件&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /etc/systemd/system/kubelet.service
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Kubernetes Kubelet Server
&lt;span class=&quot;nv&quot;&gt;Documentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://github.com/GoogleCloudPlatform/kubernetes
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker.service docker.socket calico-node.service
&lt;span class=&quot;nv&quot;&gt;Wants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker.socket calico-node.service

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;EnvironmentFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/kubernetes/kubelet.env
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin/kubelet &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBE_LOGTOSTDERR&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBE_LOG_LEVEL&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_API_SERVER&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_ADDRESS&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_PORT&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_HOSTNAME&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBE_ALLOW_PRIV&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_ARGS&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$DOCKER_SOCKET&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_NETWORK_PLUGIN&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$KUBELET_CLOUDPROVIDER&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-/usr/bin/docker rm -f kubelet
&lt;span class=&quot;nv&quot;&gt;ExecReload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/docker restart kubelet
&lt;span class=&quot;nv&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always
&lt;span class=&quot;nv&quot;&gt;RestartSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10s

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;kubeletenv&quot;&gt;kubelet.env&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim /etc/kubernetes/kubelet.env
&lt;span class=&quot;c&quot;&gt;# logging to stderr means we get it in the systemd journal&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBE_LOGGING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--logtostderr=true&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBE_LOG_LEVEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--v=2&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The address for the info server to serve on (set to 0.0.0.0 or &quot;&quot; for all interfaces)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBELET_ADDRESS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--address=172.30.33.90&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The port for the info server to serve on&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# KUBELET_PORT=&quot;--port=10250&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# You may leave this blank to use the actual hostname&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBELET_HOSTNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--hostname-override=k8s-master01&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;KUBELET_ARGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--pod-manifest-path=/etc/kubernetes/manifests &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
--pod-infra-container-image=gcr.io/google_containers/pause-amd64:3.0 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
--kube-reserved cpu=100m,memory=512M &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
--node-status-update-frequency=10s &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
--enable-cri=False --cgroups-per-qos=False &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
--enforce-node-allocatable=''  --cluster_dns=10.233.0.2 --cluster_domain=cluster.local --resolv-conf=/etc/resolv.conf --kubeconfig=/etc/kubernetes/node-kubeconfig.yaml --require-kubeconfig --node-labels=node-role.kubernetes.io/master=true,node-role.kubernetes.io/node=true&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBELET_NETWORK_PLUGIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--network-plugin=cni --network-plugin-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Should this cluster be allowed to run privileged docker containers&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBE_ALLOW_PRIV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--allow-privileged=true&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KUBELET_CLOUDPROVIDER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;node-kubeconfigyaml&quot;&gt;node-kubeconfig.yaml&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Config&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;clusters&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;certificate-authority&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl/ca.pem&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://127.0.0.1:8080&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubelet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;client-certificate&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl/node-node1.pem&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;client-key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl/node-node1-key.pem&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;contexts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubelet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubelet-cluster.local&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;current-context&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubelet-cluster.local&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;kubernetes-manifest文件&quot;&gt;kubernetes manifest文件&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/kubernetes/manifests
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -l
-rw-r--r--. 1 root root 2234 Apr 12 15:26 kube-apiserver.manifest
-rw-r--r--. 1 root root 1331 Apr 12 15:26 kube-controller-manager.manifest
-rw-r--r--. 1 root root 1319 Apr 12 15:23 kube-proxy.manifest
-rw-r--r--. 1 root root  708 Apr 12 15:26 kube-scheduler.manifest
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们知道在kubernetes中，/etc/kubernetes/manifests 目录下的文件，会由kubelet来在文件所在的节点生成static pod，下面看看每个文件的详细信息。&lt;/p&gt;

&lt;h2 id=&quot;kube-apiservermanifest&quot;&gt;kube-apiserver.manifest&lt;/h2&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pod&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-apiserver&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-system&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;k8s-app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-apiserver&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;kargo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;hostNetwork&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterFirstWithHostNet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-apiserver&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;quay.io/coreos/hyperkube:v1.6.1_coreos.0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;IfNotPresent&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;800m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2000M&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;100m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;256M&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/hyperkube&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apiserver&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--advertise-address=172.30.33.90&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--etcd-servers=https://172.30.33.90:2379,https://172.30.33.91:2379,https://172.30.33.92:2379&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--etcd-quorum-read=true&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# etcd 证书认证&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--etcd-cafile=/etc/ssl/etcd/ssl/ca.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--etcd-certfile=/etc/ssl/etcd/ssl/node-node1.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--etcd-keyfile=/etc/ssl/etcd/ssl/node-node1-key.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--insecure-bind-address=127.0.0.1&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--apiserver-count=3&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--service-cluster-ip-range=10.233.0.0/18&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--service-node-port-range=30000-32767&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# kubernetes apiserver证书认证&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--client-ca-file=/etc/kubernetes/ssl/ca.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# token auth认证&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--token-auth-file=/etc/kubernetes/tokens/known_tokens.csv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--basic-auth-file=/etc/kubernetes/users/known_users.csv&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# service account&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--secure-port=6443&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--insecure-port=8080&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--storage-backend=etcd3&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--v=2&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--allow-privileged=true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--anonymous-auth=False&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;livenessProbe&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;httpGet&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/healthz&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8080&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;initialDelaySeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;30&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;timeoutSeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubernetes-config&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/certs&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-host&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/etcd/ssl&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;etcd-certs&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubernetes-config&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/certs/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-host&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/etcd/ssl&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;etcd-certs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;kube-controller-managermanifest&quot;&gt;kube-controller-manager.manifest&lt;/h2&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pod&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-controller-manager&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-system&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;k8s-app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-controller&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;hostNetwork&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterFirstWithHostNet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-controller-manager&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;quay.io/coreos/hyperkube:v1.6.1_coreos.0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;IfNotPresent&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;250m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;512M&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;100m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;100M&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/hyperkube&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;controller-manager&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# master ip&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--master=http://127.0.0.1:8080&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--leader-elect=true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 集群范围内的证书&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--root-ca-file=/etc/kubernetes/ssl/ca.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--enable-hostpath-provisioner=false&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--node-monitor-grace-period=40s&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--node-monitor-period=5s&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--pod-eviction-timeout=5m0s&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--v=2&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;livenessProbe&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;httpGet&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/healthz&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10252&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;initialDelaySeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;30&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;timeoutSeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-kubernetes&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/certs&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-host&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-kubernetes&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/certs&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-host&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;kube-schedulermanifest&quot;&gt;kube-scheduler.manifest&lt;/h2&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pod&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-scheduler&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-system&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;k8s-app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-scheduler&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;hostNetwork&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterFirstWithHostNet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-scheduler&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;quay.io/coreos/hyperkube:v1.6.1_coreos.0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;IfNotPresent&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;250m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;512M&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;170M&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/hyperkube&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scheduler&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--leader-elect=true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--master=http://127.0.0.1:8080&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--v=2&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;livenessProbe&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;httpGet&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/healthz&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10251&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;initialDelaySeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;30&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;timeoutSeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;kube-proxymanifest&quot;&gt;kube-proxy.manifest&lt;/h2&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pod&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-proxy&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-system&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;k8s-app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-proxy&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;hostNetwork&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterFirstWithHostNet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-proxy&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;quay.io/coreos/hyperkube:v1.6.1_coreos.0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;IfNotPresent&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;500m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2000M&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;150m&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;64M&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/hyperkube&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;proxy&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--v=2&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--master=http://127.0.0.1:8080&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--bind-address=172.30.33.90&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--cluster-cidr=10.233.64.0/18&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--proxy-mode=iptables&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;securityContext&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;privileged&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/ssl/certs&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-host&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/node-kubeconfig.yaml&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;kubeconfig&quot;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;etc-kube-ssl&quot;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/run/dbus&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;var-run-dbus&quot;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl-certs-host&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/pki/tls&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;kubeconfig&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/etc/kubernetes/node-kubeconfig.yaml&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;etc-kube-ssl&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/etc/kubernetes/ssl&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;var-run-dbus&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/var/run/dbus&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;生成证书&quot;&gt;生成证书&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;上面的文件都配置好后，我们就需要生正认证所需的证书了，以前看过漠神的一篇&lt;a href=&quot;https://mritd.me/2016/09/11/kubernetes-%E5%8F%8C%E5%90%91-TLS-%E9%85%8D%E7%BD%AE/&quot;&gt;kubernetes双向TSL认证&lt;/a&gt;，有兴趣的可以去看下，说实话证书这块，我也不是很懂。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;生成etcd证书&quot;&gt;生成etcd证书&lt;/h2&gt;

&lt;h3 id=&quot;修改make-ssl-etcdsh脚本&quot;&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;make-ssl-etcd.sh&lt;/code&gt;脚本&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 在脚本开头加上&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;MASTERS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;node1 node2 node3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;HOSTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;node1 node2 node3 node4 node5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 修改ETCD member的for循环语句，修改成下面这样&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MASTERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 修改Node keys的for循环语句，修改成下面这样&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOSTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;生成证书-1&quot;&gt;生成证书&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/bin/etcd-scripts/
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./make-ssl-etcd.sh -f /etc/ssl/etcd/openssl.conf -d ~/certs/etcd/
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chown kube.root ~/certs/etcd/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chmod 700 ~/certs/etcd/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;生成kubernetes证书&quot;&gt;生成kubernetes证书&lt;/h2&gt;

&lt;h3 id=&quot;修改make-sslsh脚本&quot;&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;make-ssl.sh&lt;/code&gt;脚本&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 在脚本开头加上&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;MASTERS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;node1 node2 node3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;HOSTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;node1 node2 node3 node4 node5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 修改ETCD member的for循环语句，修改成下面这样&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MASTERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 修改Node keys的for循环语句，修改成下面这样&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOSTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;生成证书-2&quot;&gt;生成证书&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/bin/kubernetes-scripts/
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./make-ssl.sh -f /etc/kubernetes/openssl.conf -d ~/certs/kubernetes/
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chown kube.kube-cert ~/certs/kubernetes/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chmod 600 ~/certs/kubernetes/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;node节点上的主要文件&quot;&gt;node节点上的主要文件&lt;/h1&gt;

&lt;p&gt;以后所有节点就按照这个来改就行了&lt;/p&gt;

&lt;p&gt;/etc/kubernetes/kubelet.env
/etc/kubernetes/node-kubeconfig.yaml
/etc/kubernetes/manifests/kube-proxy.manifest
/etc/kubernetes/manifests/nginx-proxy.yml&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; 最后要重点注意一下，kargo会在node节点上配置单独的nginx反向代理，代理到apiserver集群，而node-kubeconfig.yaml和kube-proxy.manifest文件的内容需要修改一下&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;node-kubeconfigyaml-1&quot;&gt;node-kubeconfig.yaml&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1
kind: Config
clusters:
- name: &lt;span class=&quot;nb&quot;&gt;local
  &lt;/span&gt;cluster:
    certificate-authority: /etc/kubernetes/ssl/ca.pem
    &lt;span class=&quot;c&quot;&gt;# server: https://172.30.33.90:6443 默认生成的&lt;/span&gt;
    server: https://127.0.0.1:6443 &lt;span class=&quot;c&quot;&gt;#修改成这样，因为本地节点上的nginx反向代理是监听的这个地址，这样就确保了高可用&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;kube-proxymanifest-1&quot;&gt;kube-proxy.manifest&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1
...
  &lt;span class=&quot;c&quot;&gt;# - --master=https://172.30.33.90:6443 默认生成&lt;/span&gt;
    - --master&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://127.0.0.1:6443
    - --kubeconfig&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/kubernetes/node-kubeconfig.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;至此， 基本上可以搭建一个基础的HA kubernetes 集群了，下一章将主要讲解如何配置一些常用插件&lt;/p&gt;</content><author><name>KevinGuo</name></author><summary type="html">上一篇已经使用kargo搭建了kubernetes高可用集群，这里重点通过剥析kargo生成的配置文件来更加细化的了解下kubernetes，方便后期对kubernetes的自定义。所有的配置文件，我会放到github上</summary></entry><entry><title type="html">kargo容器化部署kubernetes高可用集群(1)</title><link href="https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(1)/" rel="alternate" type="text/html" title="kargo容器化部署kubernetes高可用集群(1)" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(1)</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/kargo%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2kubernetes%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4(1)/">&lt;blockquote&gt;
  &lt;p&gt;捣鼓kubernetes有一段时间了，先后用过&lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;kubeadm&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;custom&lt;/code&gt;等方式，但都不尽如人意，不是缺胳膊就是短腿，后来有幸翻到&lt;a href=&quot;https://mritd.me/&quot;&gt;漠然&lt;/a&gt;大神的&lt;a href=&quot;https://mritd.me/2017/03/03/set-up-kubernetes-ha-cluster-by-kargo/&quot;&gt;快速部署kubernetes高可用集群&lt;/a&gt;，并且请教了无数次才最终搭建成功，在此，再次膜拜漠然大神，同时该篇blog也参考了漠神的的博客，主要是为了记录下来，方便以后查看。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;h1 id=&quot;一基础环境&quot;&gt;一、基础环境&lt;/h1&gt;

&lt;h2 id=&quot;1准备好要部署的机器&quot;&gt;1.准备好要部署的机器&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;IP&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;ROLE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;172.30.33.89&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;k8s-registry-lb&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;172.30.33.90&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;k8s-master01-etcd01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;172.30.33.91&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;k8s-master02-etcd02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;172.30.33.92&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;k8s-master03-etcd03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;172.30.33.93&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;k8s-node01-ingress01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;172.30.33.94&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;k8s-node02-ingress02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;192.168.1.1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ansible-client&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;2准备部署机器-ansible-client&quot;&gt;2.准备部署机器 &lt;a href=&quot;http://www.oo3p.com/2017/04/17/ansible-client/&quot;&gt;ansible-client&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;3准备所需要镜像由于被墙所需镜像可以在百度云去下载点击这里&quot;&gt;3.准备所需要镜像,由于被墙，所需镜像可以在百度云去下载，&lt;a href=&quot;http://pan.baidu.com/s/1i5sUzmH&quot;&gt;点击这里&lt;/a&gt;&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;IMAGE&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;VERSION&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;quay.io/coreos/hyperkube&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.6.1_coreos.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;quay.io/coreos/etcd&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v3.1.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;calico/ctl&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.1.0-rc8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;calico/node&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.1.0-rc8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;calico/cni&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.5.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/kubernetes-dashboard-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.6.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/nginx-ingress-controller&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;0.9.0-beta.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/defaultbackend&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/cluster-proportional-autoscaler-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.1.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/fluentd-elasticsearch&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/kibana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v4.6.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/elasticsearch&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v2.4.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/kubedns-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/kube-dnsmasq-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/exechealthz-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;andyshinn/dnsmasq&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2.72&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;nginx&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.11.4-alpine&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/heapster-grafana-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v4.0.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/heapster-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.3.0-beta.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/heapster-influxdb-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;v1.1.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gcr.io/google_containers/pause-amd64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;4load所有下载的镜像&quot;&gt;4.load所有下载的镜像&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 在ansible-client上操作&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;172.30.33.89 172.30.33.90 172.30.33.91 172.30.33.92 172.30.33.93 172.30.33.94&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;scp -r kargo_images_v1.6.1 &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;:~/; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 对所有要部署的节点操作&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ls -l ~/kargo_images_v1.6.1|awk -F&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $9 }'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;x &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;docker load -i &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h1 id=&quot;二搭建集群&quot;&gt;二、搭建集群&lt;/h1&gt;

&lt;h2 id=&quot;1获取kargo源码&quot;&gt;1.获取kargo源码&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/kubernetes-incubator/kargo.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2编辑配置文件&quot;&gt;2.编辑配置文件&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim ~/kargo/inventory/group_vars/k8s-cluster.yml

---
&lt;span class=&quot;c&quot;&gt;# 启动集群的基础系统,支持ubuntu, coreos, centos, none&lt;/span&gt;
bootstrap_os: centos

&lt;span class=&quot;c&quot;&gt;# etcd数据存放位置&lt;/span&gt;
etcd_data_dir: /var/lib/etcd

&lt;span class=&quot;c&quot;&gt;# kubernetes所需二进制文件将要安装的位置&lt;/span&gt;
bin_dir: /usr/local/bin

&lt;span class=&quot;c&quot;&gt;# kubrnetes配置文件存放目录&lt;/span&gt;
kube_config_dir: /etc/kubernetes
&lt;span class=&quot;c&quot;&gt;# 生成证书和token的脚本的存放位置&lt;/span&gt;
kube_script_dir: &lt;span class=&quot;s2&quot;&gt;&quot;{ { bin_dir } }/kubernetes-scripts&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# kubernetes manifest文件存放目录&lt;/span&gt;
kube_manifest_dir: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_config_dir } }/manifests&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# kubernetes 命名空间&lt;/span&gt;
system_namespace: kube-system

&lt;span class=&quot;c&quot;&gt;# 日志存放位置&lt;/span&gt;
kube_log_dir: &lt;span class=&quot;s2&quot;&gt;&quot;/var/log/kubernetes&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# kubernetes证书存放位置&lt;/span&gt;
kube_cert_dir: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_config_dir } }/ssl&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# kubernetes token存放位置&lt;/span&gt;
kube_token_dir: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_config_dir } }/tokens&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# basic auth 认证文件存放位置&lt;/span&gt;
kube_users_dir: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_config_dir } }/users&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 关闭匿名授权&lt;/span&gt;
kube_api_anonymous_auth: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## kubernetes使用版本&lt;/span&gt;
kube_version: v1.6.1

&lt;span class=&quot;c&quot;&gt;# 安装过程中缓存文件下载位置(最少1G)&lt;/span&gt;
local_release_dir: &lt;span class=&quot;s2&quot;&gt;&quot;/tmp/releases&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 重试次数，比如下载失败等情况&lt;/span&gt;
retry_stagger: 5

&lt;span class=&quot;c&quot;&gt;# 证书组&lt;/span&gt;
kube_cert_group: kube-cert

&lt;span class=&quot;c&quot;&gt;# 集群日志等级&lt;/span&gt;
kube_log_level: 2

&lt;span class=&quot;c&quot;&gt;# HTTP下api server的basic auth认证用户名密码&lt;/span&gt;
kube_api_pwd: &lt;span class=&quot;s2&quot;&gt;&quot;test123&quot;&lt;/span&gt;
kube_users:
  kube:
    pass: &lt;span class=&quot;s2&quot;&gt;&quot;{ {kube_api_pwd} }&quot;&lt;/span&gt;
    role: admin
  root:
    pass: &lt;span class=&quot;s2&quot;&gt;&quot;{ {kube_api_pwd} }&quot;&lt;/span&gt;
    role: admin



&lt;span class=&quot;c&quot;&gt;## 开关认证 (basic auth, static token auth)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#kube_oidc_auth: false&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#kube_basic_auth: false&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#kube_token_auth: false&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;## Variables for OpenID Connect Configuration https://kubernetes.io/docs/admin/authentication/&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## To use OpenID you have to deploy additional an OpenID Provider (e.g Dex, Keycloak, ...)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# kube_oidc_url: https:// ...&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# kube_oidc_client_id: kubernetes&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## Optional settings for OIDC&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# kube_oidc_ca_file: { { kube_cert_dir } }/ca.pem&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# kube_oidc_username_claim: sub&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# kube_oidc_groups_claim: groups&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# 网络插件 (calico, weave or flannel)&lt;/span&gt;
kube_network_plugin: calico

&lt;span class=&quot;c&quot;&gt;# 开启 kubernetes network policies&lt;/span&gt;
enable_network_policy: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Kubernetes 服务的地址范围.&lt;/span&gt;
kube_service_addresses: 10.233.0.0/18

&lt;span class=&quot;c&quot;&gt;# pod 地址范围&lt;/span&gt;
kube_pods_subnet: 10.233.64.0/18

&lt;span class=&quot;c&quot;&gt;# 网络节点大小分配&lt;/span&gt;
kube_network_node_prefix: 24

&lt;span class=&quot;c&quot;&gt;# api server 监听地址及端口&lt;/span&gt;
kube_apiserver_ip: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_service_addresses|ipaddr('net')|ipaddr(1)|ipaddr('address') } }&quot;&lt;/span&gt;
kube_apiserver_port: 6443 &lt;span class=&quot;c&quot;&gt;# (https)&lt;/span&gt;
kube_apiserver_insecure_port: 8080 &lt;span class=&quot;c&quot;&gt;# (http)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 默认dns后缀&lt;/span&gt;
cluster_name: cluster.local
&lt;span class=&quot;c&quot;&gt;# 为使用主机网络的pods使用/etc/resolv.conf解析DNS的子域&lt;/span&gt;
ndots: 2
&lt;span class=&quot;c&quot;&gt;# DNS 组件dnsmasq_kubedns/kubedns&lt;/span&gt;
dns_mode: dnsmasq_kubedns
&lt;span class=&quot;c&quot;&gt;# dns模式，可以是 docker_dns, host_resolvconf or none&lt;/span&gt;
resolvconf_mode: docker_dns
&lt;span class=&quot;c&quot;&gt;# 部署netchecker来检测DNS和HTTP状态&lt;/span&gt;
deploy_netchecker: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# skydns service IP配置&lt;/span&gt;
skydns_server: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_service_addresses|ipaddr('net')|ipaddr(3)|ipaddr('address') } }&quot;&lt;/span&gt;
dns_server: &lt;span class=&quot;s2&quot;&gt;&quot;{ { kube_service_addresses|ipaddr('net')|ipaddr(2)|ipaddr('address') } }&quot;&lt;/span&gt;
dns_domain: &lt;span class=&quot;s2&quot;&gt;&quot;{ { cluster_name } }&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# docker 存储目录&lt;/span&gt;
docker_daemon_graph: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## A string of extra options to pass to the docker daemon.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## This string should be exactly as you wish it to appear.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## An obvious use case is allowing insecure-registry access&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## to self hosted registries like so:&lt;/span&gt;
docker_options: &lt;span class=&quot;s2&quot;&gt;&quot;--insecure-registry={ { kube_service_addresses } } --graph={ { docker_daemon_graph } } --iptables=false --storage-driver=devicemapper&quot;&lt;/span&gt;
docker_bin_dir: &lt;span class=&quot;s2&quot;&gt;&quot;/usr/bin&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 组件部署方式&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Settings for containerized control plane (etcd/kubelet/secrets)&lt;/span&gt;
etcd_deployment_type: docker
kubelet_deployment_type: docker
cert_management: script
vault_deployment_type: docker

&lt;span class=&quot;c&quot;&gt;# K8s image pull policy (imagePullPolicy)&lt;/span&gt;
k8s_image_pull_policy: IfNotPresent

&lt;span class=&quot;c&quot;&gt;# Monitoring apps for k8s&lt;/span&gt;
efk_enabled: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Helm deployment&lt;/span&gt;
helm_enabled: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3生成集群配置&quot;&gt;3.生成集群配置&lt;/h2&gt;
&lt;p&gt;配置完基本集群参数后，还需要生成一个集群配置文件，用于指定需要在哪几台服务器安装，和指定 master、node 节点分布，以及 etcd 集群等安装在那几台机器上。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 定义集群IP&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;172.30.33.89 172.30.33.90 172.30.33.91 172.30.33.92 172.30.33.93 172.30.33.94&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 利用kargo自带的python脚本生成配置&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONFIG_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/kargo/inventory/inventory.cfg python3 ~/kargo/contrib/inventory_builder/inventory.py &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt; IP[*] &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;生成的配置如下，最好是在配置上加上&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible_user=root&lt;/code&gt;,我最开始在搭建的时候没有指定，报错了&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node1    &lt;span class=&quot;nv&quot;&gt;ansible_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;ansible_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.90 &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.90
node2    &lt;span class=&quot;nv&quot;&gt;ansible_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;ansible_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.91 &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.91
node3    &lt;span class=&quot;nv&quot;&gt;ansible_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;ansible_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.92 &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.92
node4    &lt;span class=&quot;nv&quot;&gt;ansible_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;ansible_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.93 &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.93
node5    &lt;span class=&quot;nv&quot;&gt;ansible_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;ansible_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.94 &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.30.33.94

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kube-master]
node1
node2
node3

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kube-node]
node1
node2
node3
node4
node5

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;etcd]
node1
node2
node3

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;k8s-cluster:children]
kube-node
kube-master

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;calico-rr]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5dockerefketcd配置修改&quot;&gt;5.docker,efk,etcd配置修改&lt;/h2&gt;

&lt;p&gt;提前修改ansbile中有关docker,efk,etcd的配置，因为后面在部署的过程中，ansible会检测docker的版本并下载最新的版本，但是由于墙的原因，导致无法下载，会一直卡在下载的地方，所以这里，我们要提前修改，同时需要升级etcd的版本，默认的3.0.6的版本，存在不稳定因素。&lt;/p&gt;

&lt;p&gt;修改docker配置,将下面关于docker安装的部分全部注释掉&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/kargo/roles/docker/tasks/main.yml

&lt;span class=&quot;c&quot;&gt;# - name: ensure docker repository public key is installed&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  action: &quot;{ { docker_repo_key_info.pkg_key } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  args:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    id: &quot;{ {item} }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    keyserver: &quot;{ {docker_repo_key_info.keyserver} }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    state: present&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  register: keyserver_task_result&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  until: keyserver_task_result|succeeded&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  retries: 4&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  delay: &quot;{ { retry_stagger | random + 3 } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  with_items: &quot;{ { docker_repo_key_info.repo_keys } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  when: not (ansible_os_family in [&quot;CoreOS&quot;, &quot;Container Linux by CoreOS&quot;] or is_atomic)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# - name: ensure docker repository is enabled&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  action: &quot;{ { docker_repo_info.pkg_repo } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  args:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    repo: &quot;{ {item} }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    state: present&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  with_items: &quot;{ { docker_repo_info.repos } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  when: not (ansible_os_family in [&quot;CoreOS&quot;, &quot;Container Linux by CoreOS&quot;] or is_atomic) and (docker_repo_info.repos|length &amp;gt; 0)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# - name: Configure docker repository on RedHat/CentOS&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  template:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    src: &quot;rh_docker.repo.j2&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    dest: &quot;/etc/yum.repos.d/docker.repo&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  when: ansible_distribution in [&quot;CentOS&quot;,&quot;RedHat&quot;] and not is_atomic&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# - name: ensure docker packages are installed&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  action: &quot;{ { docker_package_info.pkg_mgr } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  args:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    pkg: &quot;{ {item.name} }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    force: &quot;{ {item.force|default(omit)} }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    state: present&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  register: docker_task_result&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  until: docker_task_result|succeeded&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  retries: 4&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  delay: &quot;{ { retry_stagger | random + 3 } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  with_items: &quot;{ { docker_package_info.pkgs } }&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  notify: restart docker&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  when: not (ansible_os_family in [&quot;CoreOS&quot;, &quot;Container Linux by CoreOS&quot;] or is_atomic) and (docker_package_info.pkgs|length &amp;gt; 0)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改efk配置，注释掉&lt;code class=&quot;highlighter-rouge&quot;&gt;KIBANA_BASE_URL&lt;/code&gt;这段，否则后面你搭建efk之后，无法访问kibana&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/kargo/roles/kubernetes-apps/efk/kibana/templates/kibana-deployment.yml.j2

&lt;span class=&quot;c&quot;&gt;#          - name: &quot;KIBANA_BASE_URL&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#            value: &quot;{ { kibana_base_url } }&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改download配置，更改etcd和kubedns版本&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/kargo/roles/download/defaults/main.yml
etcd_version: v3.1.5
kubedns_version: 1.9
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;6在ansible-client上一键部署&quot;&gt;6.在ansible-client上一键部署&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ansible-playbook -i ~/kargo/inventory/inventory.cfg cluster.yml -b -v --private-key&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;部署成功后如下
&lt;img src=&quot;/images/posts/ansible-run.png&quot; alt=&quot;&quot; /&gt;
相关node信息
&lt;img src=&quot;/images/posts/nodes.png&quot; alt=&quot;&quot; /&gt;
相关pod信息
&lt;img src=&quot;/images/posts/pods.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>KevinGuo</name></author><summary type="html">捣鼓kubernetes有一段时间了，先后用过yum,kubeadm,custom等方式，但都不尽如人意，不是缺胳膊就是短腿，后来有幸翻到漠然大神的快速部署kubernetes高可用集群，并且请教了无数次才最终搭建成功，在此，再次膜拜漠然大神，同时该篇blog也参考了漠神的的博客，主要是为了记录下来，方便以后查看。</summary></entry><entry><title type="html">ansible客户端配置</title><link href="https://kevinguo.me/2017/07/06/ansible-client/" rel="alternate" type="text/html" title="ansible客户端配置" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/ansible-client</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/ansible-client/">&lt;p&gt;为kargo kubernetes准备ansible客户端&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;1.ansible-client 免密钥登录所有要部署的节点&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh-keygen -t rsa -P &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2.将ansible-client上的id_rsa.pub复制到其他所有节点&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;172.30.33.89 172.30.33.90 172.30.33.91 172.30.33.92 172.30.33.93 172.30.33.94&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;x &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.ansible-client 上安装pip,python,setuptools,最好能先&lt;code class=&quot;highlighter-rouge&quot;&gt;yum update&lt;/code&gt;一下&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# setuptools安装&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;wget https://bootstrap.pypa.io/get-pip.py
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python get-pip.py

&lt;span class=&quot;c&quot;&gt;# pip安装&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;35f01da33009719497f01a4ba69d63c9
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;tar zxvf pip-9.0.1.tar.gz
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.ansible安装&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yum install pycrypto python2-cryptography -y
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pip install ansible
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>KevinGuo</name></author><summary type="html">为kargo kubernetes准备ansible客户端</summary></entry><entry><title type="html">Maven之setting.xml</title><link href="https://kevinguo.me/2017/07/06/Maven-setting.xml/" rel="alternate" type="text/html" title="Maven之setting.xml" /><published>2017-07-06T00:00:00+08:00</published><updated>2017-07-06T00:00:00+08:00</updated><id>https://kevinguo.me/2017/07/06/Maven-setting.xml</id><content type="html" xml:base="https://kevinguo.me/2017/07/06/Maven-setting.xml/">&lt;h3 id=&quot;什么是maven&quot;&gt;什么是Maven&lt;/h3&gt;
&lt;p&gt;Maven是一个项目管理和综合工具，用java编写，能简化和标准化项目建设过程。处理编译，部署，文档，团队协作和其他任务的无缝连接。 Maven增加可重用性并负责建立相关的任务。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;maven资源库&quot;&gt;Maven资源库&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Maven本地资源库&lt;/li&gt;
    &lt;li&gt;Maven私服库&lt;/li&gt;
    &lt;li&gt;Maven中央仓库
一般在打包编译的时候，会先从本地仓库中查找，如果本地仓库没有，就会去设定好的私服仓库去查找，私服仓库上如果有就下载下来，没有私服仓库就会去中央仓库查找&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;maven的settingsxml文件&quot;&gt;Maven的settings.xml文件&lt;/h3&gt;
&lt;p&gt;在安装好maven之后，我们首先要做的是根据我们的需求配置maven的settings.xml文件
settings.xml对于maven来说，相当于全局性的配置，用于所有的项目。在Maven2中存在两个settings.xml，一个位于maven2的安装目录conf下面，作为全局性配置。对于团队设置，保持一致的定义是关键，所以conf下的settings.xml就作为团队共同的配置文件。而对于每个单独的成员，如果有特殊的需要自定义的设置，如用户信息之类，就可以在~/.m2/settings.xml中进行设定&lt;/p&gt;

&lt;h3 id=&quot;settingsxml的基本结构如下&quot;&gt;settings.xml的基本结构如下&lt;/h3&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;settings&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;  
          &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;  
          &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&lt;/span&gt;  
                               &lt;span class=&quot;err&quot;&gt;http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;localRepository/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;interactiveMode/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;usePluginRegistry/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;offline/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;pluginGroups/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;servers/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;mirrors/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;proxies/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;profiles/&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;activeProfiles/&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#表示本地仓库的位置，默认在~/.m2/repository&lt;/span&gt;
&amp;lt;localRepository&amp;gt;/path/to/local/repo&amp;lt;localRepository/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#如果不想每次编译都去查找中心库，就设置为true，前提是你必须已经下载好了必须的依赖包，默认是false&lt;/span&gt;
&amp;lt;offline&amp;gt;false&amp;lt;offline/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#在POM文件中定义了distributionManagement元素，然而特定的username和password不能用于pom.xml，所以通过此配置来保存server信息，这里的id必须和后面repository中定义的id一致，主要是用来部署到nexus私服&lt;/span&gt;
&amp;lt;server&amp;gt;
  &amp;lt;id&amp;gt;release&amp;lt;/id&amp;gt;
  &amp;lt;username&amp;gt;admin&amp;lt;/username&amp;gt;
  &amp;lt;password&amp;gt;admin123&amp;lt;/password&amp;gt;
&amp;lt;/server&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#表示镜像仓库，指定库的镜像，这里的mirrorOf表示此镜像是那个库的镜像，*表示所有库&lt;/span&gt;
&amp;lt;mirrors&amp;gt;
&amp;lt;mirror&amp;gt;
  &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt;
  &amp;lt;mirrorOf&amp;gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&amp;lt;/mirrorOf&amp;gt;
  &amp;lt;name&amp;gt;Nexus Repository&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http://192.168.56.22:8081/nexus/content/groups/public/&amp;lt;/url&amp;gt;
&amp;lt;/mirror&amp;gt;
&amp;lt;mirrors/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#代理服务器设置，主要用于无法直接访问中心的库用户设置&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;lt;proxies&amp;gt;  &lt;/span&gt;
   &amp;lt;proxy&amp;gt;  
     &amp;lt;id&amp;gt;myproxy&amp;lt;/id&amp;gt;  
     &amp;lt;active&amp;gt;true&amp;lt;/active&amp;gt;  
     &amp;lt;protocol&amp;gt;http&amp;lt;/protocol&amp;gt;  
     &amp;lt;host&amp;gt;proxy.somewhere.com&amp;lt;/host&amp;gt;  
     &amp;lt;port&amp;gt;8080&amp;lt;/port&amp;gt;  
     &amp;lt;username&amp;gt;proxyuser&amp;lt;/username&amp;gt;  
     &amp;lt;password&amp;gt;somepassword&amp;lt;/password&amp;gt;  
     &amp;lt;nonProxyHosts&amp;gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.google.com|ibiblio.org&amp;lt;/nonProxyHosts&amp;gt;  
   &amp;lt;/proxy&amp;gt;  
 &amp;lt;/proxies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#自定义配置，可以指定repositories，properties，pluginRepositories，activation等元素&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#这里的repositories表示，开发团队自己的开发库，定义这个库，一般是为了方便distributionManagement发布&lt;/span&gt;
&amp;lt;profiles&amp;gt;
&amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt;
      &amp;lt;repositories&amp;gt;
        &amp;lt;repository&amp;gt;
            &amp;lt;id&amp;gt;public&amp;lt;/id&amp;gt;
            &amp;lt;name&amp;gt;public&amp;lt;/name&amp;gt;
            &amp;lt;url&amp;gt;http://192.168.56.22:8081/nexus/content/groups/public/&amp;lt;/url&amp;gt;
            &amp;lt;releases&amp;gt;&amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&amp;lt;/releases&amp;gt;
            &amp;lt;snapshots&amp;gt;&amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&amp;lt;/snapshots&amp;gt;
        &amp;lt;/repository&amp;gt;
      &amp;lt;/repositories&amp;gt;
&amp;lt;/profile&amp;gt;
&amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#properties作为maven的占位符之，包括5中类型值：&lt;/span&gt;
env.x：返回当前的环境变量
project.x：返回pom文件中定义的project元素值
settings.x：返回settings.xml中定义的元素
java系统属性：返回经过java.lang.System.getProperties&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;返回的值
x：用户自定义的值
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#激活指定的profile，通过profile id 来指定&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;lt;activeProfiles&amp;gt;  &lt;/span&gt;
    &amp;lt;activeProfile&amp;gt;env-test&amp;lt;/activeProfile&amp;gt;
&amp;lt;/activeProfiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>KevinGuo</name></author><summary type="html">什么是Maven Maven是一个项目管理和综合工具，用java编写，能简化和标准化项目建设过程。处理编译，部署，文档，团队协作和其他任务的无缝连接。 Maven增加可重用性并负责建立相关的任务。</summary></entry></feed>